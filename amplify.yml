version: 1
applications:
  - appRoot: .
    backend:
      phases:
        preBuild:
          commands:
            # Clean install
            - rm -rf node_modules package-lock.json
            - npm cache clean --force
            # Create temporary tsconfig with skipLibCheck
            - |
              echo '{
                "compilerOptions": {
                  "skipLibCheck": true,
                  "target": "es5",
                  "module": "commonjs",
                  "strict": true,
                  "esModuleInterop": true,
                  "moduleResolution": "node"
                }
              }' > tsconfig.build.json
            # Debug npm config
            - echo "NPM Config:" && npm config list
            - echo "Node version:" && node --version
            - echo "NPM version:" && npm --version
            # Install ts-loader first to ensure it's in node_modules
            - npm install --save-dev ts-loader@9.5.1 typescript webpack webpack-cli --legacy-peer-deps
            - echo "Checking ts-loader installation:"
            - npm list ts-loader
            # Now install remaining dependencies
            - npm install --legacy-peer-deps
            - echo "Installed remaining dependencies"
            # Verify critical dependencies
            - echo "Verifying webpack and ts-loader versions..."
            - npm list webpack ts-loader typescript
            - echo "Checking ts-loader in node_modules:"
            - ls -la node_modules/ts-loader
            - echo "Using tsconfig.build.json:"
            - cat tsconfig.build.json
        build:
          commands:
            - npm run build
      artifacts:
        baseDirectory: dist
        files:
          - '**/*'
    frontend:
      phases:
        preBuild:
          commands:
            - echo "No frontend build needed"
        build:
          commands:
            - echo "No frontend build needed"
      artifacts:
        baseDirectory: /
        files:
          - '**/*' 